version: 2.1

executors:
  for_tests:
    docker:
      - image: cimg/python:3.11.2-node
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgres://root:password@localhost/circle_test
          DJANGO_SETTINGS_MODULE: core.settings_test
          SECRET_KEY: secret-key
          EMAIL_HOST: host
          EMAIL_PORT: 587
          EMAIL_HOST_USER: xxx
          EMAIL_HOST_PASSWORD: xxx
          SCALINGO_APP: access4all
          SEND_IN_BLUE_API_KEY: xxx
          SCALINGO_REDIS_URL: redis://default:access4allpwd@127.0.0.1:6379/1
      - image: cimg/postgres:12.12-postgis
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: circle_test
      - image: cimg/redis:7.0

  for_checks:
    docker:
      - image: cimg/python:3.11.2-node
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DJANGO_SETTINGS_MODULE: core.settings_test
          SECRET_KEY: secret-key
          DATABASE_URL: postgres://root:password@localhost/circle_test
jobs:
  checks:
    executor:
      name: for_checks
    steps:
      - checkout
      - run:
          name: Install System dependencies
          command: |
            sudo apt update
            sudo apt install -y gdal-bin gettext
      - run:
          name: Install Python dependencies
          command: |
            pipenv sync --dev
      - save_cache:
          key: python-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - '.venv'
            - '/usr/local/lib/python3.11/site-packages'
      - restore_cache:
          name: Restore Node cached dependencies
          keys:
            - node-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node dependencies
          command: |
            npm ci
      - save_cache:
          key: node-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - 'node_modules'
      - run:
          name: Run Flake8
          command: |
            pipenv run flake8
      - run:
          name: Check production security
          command: |
            DJANGO_SETTINGS_MODULE=core.settings_prod pipenv run ./manage.py check --deploy
      - run:
          name: Check SASS stylesheets
          command: |
            npm run build:prod
      - run:
          name: Check Django templates
          command: |
            pipenv run ./manage.py validate_templates
      - run:
          name: Check Django templates linting
          command: |
            pipenv run djlint templates --profile=django --custom-blocks=switch,flag,sample --ignore="H006,H021,H019"
      - run:
          name: Check translations
          command: |
            ./bin/check_translations.sh
      - run:
          name: Check FE linting
          command: |
            npx prettier --check .

  tests:
    executor:
      name: for_tests
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Install System dependencies
          command: |
            sudo apt update
            sudo apt install -y gdal-bin
      - run:
          name: Install Python dependencies
          command: |
            pipenv sync --dev
      - run:
          name: Wait for Postgres & redis server
          command: dockerize -wait tcp://localhost:5432 -wait tcp://localhost:6379 -timeout 10s
      - run:
          name: Run database migrations
          command: |
            pipenv run ./manage.py migrate
      - run:
          name: Run tests
          command: |
            mkdir test-results
            pipenv run pytest --circleci-parallelize --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1

workflows:
  version: 2
  workflow:
    jobs:
      - checks
      - tests
