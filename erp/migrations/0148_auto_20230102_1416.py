# Generated by Django 3.2.16 on 2023-01-02 13:16

from django.db import migrations
from django.db.models import Q
from reversion.models import Version

from core.db import MigrationIgnoredInTest


def update_sanitaires_adaptes_to_bool(apps, schema_editor):
    # executed when migration is applied
    versions = Version.objects.filter(
        Q(serialized_data__icontains='sanitaires_adaptes": 1') | Q(serialized_data__icontains='sanitaires_adaptes": 2')
    )
    for version in versions:
        version.serialized_data = version.serialized_data.replace('sanitaires_adaptes": 1', 'sanitaires_adaptes": true')
        version.serialized_data = version.serialized_data.replace('sanitaires_adaptes": 2', 'sanitaires_adaptes": true')
        version.save()

    versions = Version.objects.filter(serialized_data__icontains='sanitaires_adaptes": 0')
    for version in versions:
        version.serialized_data = version.serialized_data.replace(
            'sanitaires_adaptes": 0', 'sanitaires_adaptes": false'
        )
        version.save()


def update_sanitaires_adaptes_to_int(apps, schema_editor):
    # executed when migration is reversed
    versions = Version.objects.filter(serialized_data__icontains='sanitaires_adaptes": false')
    for version in versions:
        version.serialized_data = version.serialized_data.replace(
            'sanitaires_adaptes": false', 'sanitaires_adaptes": 0'
        )
        version.save()

    versions = Version.objects.filter(serialized_data__icontains='sanitaires_adaptes": true')
    for version in versions:
        version.serialized_data = version.serialized_data.replace('sanitaires_adaptes": true', 'sanitaires_adaptes": 1')
        version.save()


class Migration(MigrationIgnoredInTest):
    dependencies = [
        ("erp", "0147_erp_erp_erp_publish_c6bbad_idx"),
    ]

    operations = [migrations.RunPython(update_sanitaires_adaptes_to_bool, update_sanitaires_adaptes_to_int)]
