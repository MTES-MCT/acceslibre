.text-center {
  text-align: center;
}

.text {
  &--ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

.overflow {
  &--hidden {
    overflow: hidden;
  }
}

// SPACING
.mt-10,
.my-10 {
  margin-top: 9rem !important;
}

.mt-20,
.my-20 {
  margin-top: 15rem !important;
}

.display--block {
  display: block;
}

.justify {
  &--self {
    &-end {
      justify-self: flex-end;
    }
  }
  &-content {
    &--end {
      justify-content: end;
    }
  }
}

.align {
  &--self {
    &-baseline {
      align-self: baseline;
    }
  }
}

.display {
  &--flex {
    display: flex;
  }

  &--block {
    display: block;
  }

  &--inline-block {
    display: inline-block;
  }
}

.flex {
  &--wrap {
    flex-wrap: wrap;
  }

  &--no-wrap {
    flex-wrap: nowrap;
  }
}

@mixin line-clamp($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  box-orient: vertical;
  -webkit-line-clamp: $lines;
  line-clamp: $lines;
}

.list {
  &-style-type--none {
    list-style-type: none;
  }
}

.text--clamp {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;

  &-2 {
    @extend .text--clamp;
    -webkit-line-clamp: 2;
    line-clamp: 2;
  }

  &-3 {
    @extend .text--clamp;
    -webkit-line-clamp: 3;
    line-clamp: 3;
  }
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.position {
  &--relative {
    position: relative;
  }

  &--absolute {
    position: absolute;
  }

  &--sticky {
    position: sticky;
  }
}

.direction {
  &--column {
    flex-direction: column;
  }

  &--row {
    flex-direction: row;
  }
}

.justify {
  &-content {
    &--end {
      justify-content: end;
    }
  }

  &-self {
    &--center {
      justify-self: center;
    }

    &--end {
      justify-self: end;
    }
  }
}

.align {
  &-self {
    &--end {
      align-self: end;
    }

    &--center {
      align-self: center;
    }
  }

  &-items {
    &--center {
      align-items: center;
    }
  }
}

.word-break {
  &--all {
    word-break: break-all;
  }

  &--word {
    word-break: break-word;
  }
}

.text {
  &--center {
    text-align: center;
  }

  &--bold {
    font-weight: 700;
  }

  &--hidden {
    display: none;
  }
}

.cursor {
  &--pointer {
    cursor: pointer;
  }
}

@mixin generate-gap-classes {
  @for $i from 1 through 10 {
    .gap-#{$i}w {
      gap: calc($i * 0.5rem);
    }

    .gap-#{$i}v {
      gap: calc($i * 0.25rem);
    }
  }
}

@include generate-gap-classes();
